<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>FFmpeg on 张文兵的笔记</title><link>https://notes.zhangwenbing.com/tags/ffmpeg/</link><description>Recent content in FFmpeg on 张文兵的笔记</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Tue, 06 Feb 2024 16:31:04 +0800</lastBuildDate><atom:link href="https://notes.zhangwenbing.com/tags/ffmpeg/index.xml" rel="self" type="application/rss+xml"/><item><title>FFmpeg检测透明通道</title><link>https://notes.zhangwenbing.com/articles/2024/02/06/kkcc5t2y88hybafpourudv/</link><pubDate>Tue, 06 Feb 2024 16:31:04 +0800</pubDate><guid>https://notes.zhangwenbing.com/articles/2024/02/06/kkcc5t2y88hybafpourudv/</guid><description>检测透明通道 # FFmpeg命令 # $ ffmpeg -v error -i 123.mp4 -vf &amp;#34;select=&amp;#39;eq(n,0)&amp;#39;, alphaextract&amp;#34; -f null /dev/null [Parsed_alphaextract_1 @ 0x7fe8f5208100] Requested planes not available. [Parsed_alphaextract_1 @ 0x7fe8f5208100] Failed to configure input pad on Parsed_alphaextract_1 [vf#0:0 @ 0x7fe8f5005f40] Error reinitializing filters! Failed to inject frame into filter network: Invalid argument Error while filtering: Invalid argument [out#0/null @ 0x7fe8f5004900] Nothing was</description></item><item><title>ffmpeg规范音频的响度</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/ROS_KIbGg/</link><pubDate>Tue, 22 Dec 2020 14:53:01 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/ROS_KIbGg/</guid><description>通过FFmpeg内置滤镜、手动调整音量、或者ffmpeg-normalize实现对响度的控制。 内置归一化滤波器 # loudnorm：通过EBU</description></item><item><title>ffmpeg在特定的时间混合一个或多个音频</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/Mv3bzfgqM/</link><pubDate>Tue, 13 Oct 2020 08:24:19 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/Mv3bzfgqM/</guid><description>使用FFmpeg中的adelay和amix滤镜给音频做混音 在30秒后混合1个音频 ffmpeg -i 1-1.mp3 -i 2.mp3 -filter_complex &amp;#34;[1]adelay=delays=30s:all=1[aud1];[0][aud1]amix=inputs=2&amp;#34; -vsync 2 -y 3.mp3 在30秒后混合2个音频 ffmpeg -i 1-1.mp3 -i 2.mp3 -i 3.mp3 -filter_complex</description></item><item><title>FFmpeg 水印</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/UtHueryud/</link><pubDate>Wed, 15 Jul 2020 06:31:49 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/UtHueryud/</guid><description>图片水印、文字水印、画中画 图片水印 # ffmpeg -i input.mp4 -vf &amp;#34;movie=wenzi.png[watermark];[in][watermark] overlay=main_w-overlay_w-10:main_h-overlay_h-10[out] &amp;#34; output.mp4 -i :一般表示输入 input.mp4:这里表示要处理的视频源 -vf:滤镜相关，视频裁剪，水</description></item><item><title>ffprobe详解</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/rdgQnFI6j/</link><pubDate>Wed, 13 May 2020 09:51:05 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/rdgQnFI6j/</guid><description>ffprobe是ffmpeg提供的三大工具之一，用来查看音视频文件的各种信息，比如：封装格式、音频/视频流信息、数据包信息等。 ffprobe</description></item><item><title>ffmpeg 删除音视频文件中的元数据</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/ovfEIBOES/</link><pubDate>Thu, 07 Nov 2019 09:55:49 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/ovfEIBOES/</guid><description>清除mp3文件中自带的专辑（album），艺术家（artist），流派（genre）等元数据。 ffmpeg -i &amp;#34;test.mp3&amp;#34; -b:a 320k -map_metadata -1 -y &amp;#34;out.mp3&amp;#34; -map_metadata -1 表示清除所有元数据</description></item><item><title>ffmpeg 裁剪视频</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/H1mn7tcA7/</link><pubDate>Tue, 27 Nov 2018 08:49:10 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/H1mn7tcA7/</guid><description>ffmpeg命令裁剪视频，一般用于裁剪黑边 说明 # 命令 # ffmpeg -i input.mp4 -vf crop=iw/3:ih:0:0 output.mp4 ffmpeg -i input.mp4 -vf crop=iw/3:ih:iw/3:0 output.mp4 ffmpeg -i input.mp4 -vf crop=iw/3:ih:iw/3*2:0 output.mp4</description></item><item><title>ffmpeg加水印</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/BkjYYAI3X/</link><pubDate>Wed, 31 Oct 2018 07:48:43 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/BkjYYAI3X/</guid><description>FFmpeg是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。采用LGPL或GPL许可证。它提供了录制、转换以及流化</description></item><item><title>ffmpeg 9:16和16:9互相转换</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/Bki3dANDX/</link><pubDate>Thu, 30 Aug 2018 03:00:05 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/Bki3dANDX/</guid><description>​今天搜集了一下16:9和9:16相互转换的命令。将多余的部分用模糊背景填充，感觉比直接加黑边好很多。 16:9转9:16 # 命令 # ffmpeg -i input.mp4 -lavfi &amp;#34;[0:v]scale=256/81*iw:256/81*ih,boxblur=luma_radius=min(h\,w)/40:luma_power=3:chroma_radius=min(cw\,ch)/40:chroma_power=1[bg];[bg][0:v]overlay=(W-w)/2:(H-h)/2,setsar=1,crop=w=iw*81/256&amp;#34; output.mp4</description></item><item><title>ffmpeg输出苹果编码格式prores</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/SkuD1wO4X/</link><pubDate>Fri, 27 Jul 2018 09:05:04 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/SkuD1wO4X/</guid><description>ffmpeg输出苹果编码格式prores。分辨率1080p，25帧，5个音轨。 ffmpeg -i 06无字幕mp4-使用此视频的画面.mp4 -i 06有字幕-使</description></item><item><title>ffmbc转码输出DVCPRO HD</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/SJkrWTUVm/</link><pubDate>Thu, 26 Jul 2018 03:40:55 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/SJkrWTUVm/</guid><description>使用ffmbc多线程转码输出DVCPRO HD。分辨率为1440x1080，隔行扫描。 一 # 将一个双声道音轨复制输出成两个单声道音轨 ffmbc -y -threads 8 -i 海</description></item><item><title>XDCAM HD422 MXF</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/Hy8NTRZmm/</link><pubDate>Tue, 10 Jul 2018 07:25:03 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/Hy8NTRZmm/</guid><description>分别使用ffmpeg ffmbc 实现 输出XDCAM HD422 MXF文件 ffmpeg # ffmpeg -i test.mov -pix_fmt yuv422p -vcodec mpeg2video -non_linear_quant 1 -flags +ildct+ilme -top 1 -dc 10 -intra_vlc 1 -qmax 3 -lmin &amp;#34;1*QP2LAMBDA&amp;#34; -vtag xd5c -rc_max_vbv_use 1 -rc_min_vbv_use 1 -g 12 -b:v 50000k -minrate 50000k -maxrate 50000k -bufsize 8000k -acodec pcm_s16le -ar 48000 -bf</description></item><item><title>nginx+rtmp+hls直播推流</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/BkPsvPiGm/</link><pubDate>Thu, 05 Jul 2018 10:04:28 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/BkPsvPiGm/</guid><description>源码编译nginx+rtmp+hls，并附带nginx配置文件、推流的方式及播放方法。 nginx # 编译 # wget http://nginx.org/download/nginx-1.14.0.tar.gz wget https://github.com/arut/nginx-rtmp-module/archive/v1.2.1.tar.gz wget http://zlib.net/zlib-1.2.11.tar.gz wget #全部解压并编译nginx ./configure --sbin-path=/usr/local/nginx/nginx</description></item><item><title>AAC 到 PCM 音频解码</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/HJbQ88N980f/</link><pubDate>Mon, 14 May 2018 04:45:01 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/HJbQ88N980f/</guid><description>最近遇到在 iOS 平台上实时播放 AAC 音频数据流, 一开始尝试用 AudioQueue 直接解 AAC 未果, 转而将 AAC 解码为 PCM, 最终实… 最近遇到在 iOS 平台上实时播放 AAC 音频数据流, 一开始尝</description></item><item><title>ffmbc之转DVCPROHD</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/BkpKIL498RM/</link><pubDate>Mon, 14 May 2018 04:45:01 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/BkpKIL498RM/</guid><description>ffmbc -i xx.ts -vcodec dvvideo -flags +ildct+ilme -tff -pix_fmt yuv422p -vf scal… ffmbc -i xx.ts -vcodec dvvideo -flags +ildct+ilme -tff -pix_fmt yuv422p -vf scale=1440:1080:1 -acodec pcm_s16le -ar 48000 -ac 1 -y xx.mxf</description></item><item><title>ffmoeg多音频合成(混流)使用方法</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/S1DOL84cLCz/</link><pubDate>Mon, 14 May 2018 04:45:01 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/S1DOL84cLCz/</guid><description>ffmpeg -i INPUT1 -i INPUT2 -i INPUT3 -filter_complex amix=inputs=3:duration=firs… ffmpeg -i INPUT1 -i INPUT2 -i INPUT3 -filter_complex amix=inputs=3:duration=first:dropout_transition=3 OUTPUT 它接受下列参数： inputs 输入数。如果没有指定，默认为2</description></item><item><title>ffmpeg 多音轨混合成多声道</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/Hy0UI8V9I0M/</link><pubDate>Mon, 14 May 2018 04:45:01 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/Hy0UI8V9I0M/</guid><description>使用FFmpeg制作多声道视频 将8个音轨混合成双声道 ffmpeg -i input.mkv -filter_complex &amp;#34;[0:1][0:2][0:3][0:4][0:5][0:6][0:7][0:8] amerge=inputs=8&amp;#34; -c:a pcm_s16le output.mkv</description></item><item><title>ffmpeg获取display_picture_number对应帧信息</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/B1mILV58AM/</link><pubDate>Mon, 14 May 2018 04:45:01 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/B1mILV58AM/</guid><description>使用方式 # ffmpeg -i input -vf &amp;#34;select=eq(n\,15237)&amp;#34;,showinfo -an -f null /dev/null 输出结果 # 15237为display_picture_number [Parsed_showinfo_1 @ 0x41ca760] n: 0 pts:54860400 pts_time:609.56 pos:427032896 fmt:yuv420p sar:1/1 s:1920x1080 i:T iskey:0 type:B checksum:A2FB0133 plane_checksum:[7E1FA1A9 3D005549 67BC0A32] mean:[92 127 134] stdev:[62.5 9.2</description></item><item><title>ffmpeg音频合成命令全集</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/S1uzUUNc8Cf/</link><pubDate>Mon, 14 May 2018 04:45:01 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/S1uzUUNc8Cf/</guid><description>等有时间了再将其翻译一下，源网址-&amp;gt;传送门 stereo → mono stream Mix a single stereo stream down to … 等有时间了再将其翻译一下，源网址-&amp;gt;传送门 stereo → mono stream # ![stereo to mono diagram](https://trac.ffmpeg.org/raw- attachment/wiki/AudioChannelManipulation/stereo_mono.png)Mix</description></item><item><title>ffmpeg逐行扫描转隔行扫描</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/BJDz88N580G/</link><pubDate>Mon, 14 May 2018 04:45:01 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/BJDz88N580G/</guid><description>命令参数 # ffmpeg -i input -aspect 16:9 -c:v mpeg2video -b:v 4000k -minrate 4000k -maxrate 4000k -bufsize 2000k -dc 9 -flags +ilme+ildct -alternate_scan 1 -top 0 output 其实主要的就是如下参数： -flags +ilme+ildct -alternate_scan 1 -top 0 alternate_scan使用隔行转码，to</description></item><item><title>H.264：i帧，p帧，b帧介绍</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/Sy778INqIRM/</link><pubDate>Mon, 14 May 2018 04:45:01 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/Sy778INqIRM/</guid><description>i帧 帧内编码帧，i帧表示关键帧，它保留了一副画面完整的数据信息，解码的时候只需要这归真数据就可以完成（因为i帧里面包含了花面狸免得所有信息）</description></item><item><title>H.264NAL头解析</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/S1cmUI4qUCf/</link><pubDate>Mon, 14 May 2018 04:45:01 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/S1cmUI4qUCf/</guid><description>H.264 NAL头解析 如果NALU对应的Slice为一帧的开始，则用4字节表示，即0x00000001；否则用3字节表示，0x000001。 NAL He…</description></item><item><title>iOS FFmpeg集成</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/SkNmLLVcUCf/</link><pubDate>Mon, 14 May 2018 04:45:01 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/SkNmLLVcUCf/</guid><description>FFmpeg标准库 概念: FFmpeg是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。 采用LGPL或GPL许可证。它</description></item><item><title>Rematrix is needed between 10 channels and 7.1(wide) but there is not enough</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/S1EdILNqU0M/</link><pubDate>Mon, 14 May 2018 04:45:01 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/S1EdILNqU0M/</guid><description>解决办法 将10个声道拆分成10个音轨 ffmpeg -i INPUTFILE -filter_complex “[0:a]pan=mono|c0=c0[… 解决办法 # 将10个声道拆分成10个音轨 ffmpeg -i INPUTFILE -filter_complex &amp;#34;[0:a]pan=mono|c0=c0[a0];[0:a]pan=mono|c0=c1[a1];[0:a]pan=mono|c0=c2[a2];[0:a]pan=mono|c0=c3[a3];[0:a]pan=mono|c0=c4[a4];[0:a]pan=mono|c0=c5[a5];[0:a]pan=mono|c0=c6[a6];[0:a]pan=mono|c0=c7[a7];[0:a]pan=mono|c0=c8[a8];[0:a]pan=mono|c0=c9[a9]&amp;#34; -map &amp;#34;[a0]&amp;#34;</description></item><item><title>简析Android集成FFMPEG推流</title><link>https://notes.zhangwenbing.com/blog/ffmpeg/SyD7UIEcUAM/</link><pubDate>Mon, 14 May 2018 04:45:01 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/ffmpeg/SyD7UIEcUAM/</guid><description>如今，视频直播行业在中国算是比较热门。在刚刚过去的2015年，视频直播成为互联网行业最抢眼的领域之一。从游戏到秀场，从传统的网页端到移动互联</description></item></channel></rss>