<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>📔 Git on 张文兵的笔记</title><link>https://notes.zhangwenbing.com/notes/</link><description>Recent content in 📔 Git on 张文兵的笔记</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Thu, 14 Mar 2024 16:10:13 +0800</lastBuildDate><atom:link href="https://notes.zhangwenbing.com/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>📝 标签操作</title><link>https://notes.zhangwenbing.com/notes/2024/03/11/j3c62fv8dglvf2kg975zlv/</link><pubDate>Mon, 11 Mar 2024 17:17:10 +0800</pubDate><guid>https://notes.zhangwenbing.com/notes/2024/03/11/j3c62fv8dglvf2kg975zlv/</guid><description>创建标签 # git tag &amp;lt;tagname&amp;gt; 推送标签到远程仓库 # git push origin &amp;lt;tagname&amp;gt; 推送所有标签到远程仓库 # git push origin --tags 查看本地所有标签 # git tag 查看远程所有标签 # git ls-remote --tags origin 删除本地或远程标</description></item><item><title>📝 删除Commit</title><link>https://notes.zhangwenbing.com/notes/2024/03/14/5kqlzqjqawbxf2t6vusxar/</link><pubDate>Thu, 14 Mar 2024 16:10:13 +0800</pubDate><guid>https://notes.zhangwenbing.com/notes/2024/03/14/5kqlzqjqawbxf2t6vusxar/</guid><description># 获取commit信息 git log # commit-id 要删除commit的下一个commit-id git rebase -i (commit-id) # 编辑文件，将要删除的commit之前的pick改为dro</description></item><item><title>📝 git之删除远程分支</title><link>https://notes.zhangwenbing.com/blog/git/WNYzxj6GR/</link><pubDate>Thu, 10 Jun 2021 19:09:17 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/git/WNYzxj6GR/</guid><description>git删除远程分支就这么简单 git push origin --delete [branch_name]</description></item><item><title>📝 git更新.gitignore</title><link>https://notes.zhangwenbing.com/blog/git/-fZeBsu3T/</link><pubDate>Tue, 25 Aug 2020 11:22:54 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/git/-fZeBsu3T/</guid><description>一般直接修改.gitignore是不生效的，需要先清理缓存，再修改.gitignore。 git rm -r --cached . git add . git commit -m &amp;#39;update .gitignore&amp;#39;</description></item><item><title>📝 git修改历史cimmit信息</title><link>https://notes.zhangwenbing.com/blog/git/H1Krv6b-4/</link><pubDate>Fri, 28 Dec 2018 10:17:25 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/git/H1Krv6b-4/</guid><description>git 使用rebase修改历史提交的cimmit信息 1、修改指定commit # git rebase -i 36224db 或: git rebase -i HEAD~3 2、把pick改为edit # pick：保留该c</description></item><item><title>📝 git基础笔记</title><link>https://notes.zhangwenbing.com/blog/git/By9OI51xN/</link><pubDate>Thu, 13 Dec 2018 08:33:55 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/git/By9OI51xN/</guid><description>git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 克隆项目 # git clone https://github.com/golang/go.git 查看远程仓库 # git remote -v 添加远程仓库 # 要</description></item><item><title>📝 Git回滚到某个commit</title><link>https://notes.zhangwenbing.com/blog/git/Hk6GGp6cQ/</link><pubDate>Fri, 12 Oct 2018 06:49:25 +0800</pubDate><guid>https://notes.zhangwenbing.com/blog/git/Hk6GGp6cQ/</guid><description>git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 回滚命令 # git reset --hard HEAD^ #回滚到上个版本 git reset --hard HEAD~3 #回滚到前</description></item></channel></rss>